version: '3.9'

networks:
   somenetwork:
    driver: bridge

services:
 # master:
 #    container_name: "${COMPOSE_PROJECT_NAME:-citus}_master"
 #    image: "citusdata/citus:12.1.2"
 #    ports: ["${COORDINATOR_EXTERNAL_PORT:-5432}:5432"]
 #    networks:
 #     - somenetweork
 #    labels: ["com.citusdata.role=Master"]
 #    environment: &AUTH
 #      POSTGRES_USER: "${POSTGRES_USER:-postgres}"
 #      POSTGRES_PASSWORD: "pass"
 #      POSTGRES_DB: "otusdb"
 #      PGUSER: "${POSTGRES_USER:-postgres}"
 #      PGPASSWORD: "pass"
 #      POSTGRES_HOST_AUTH_METHOD: "${POSTGRES_HOST_AUTH_METHOD:-trust}"
 # worker:
 #    image: "citusdata/citus:12.1.2"
 #    networks:
 #     - somenetweork
 #    labels: ["com.citusdata.role=Worker"]
 #    depends_on: [manager]
 #    environment: *AUTH
 #    command: "/wait-for-manager.sh"
 #    volumes:
 #      - healthcheck-volume:/healthcheck
 # manager:
 #    container_name: "${COMPOSE_PROJECT_NAME:-citus}_manager"
 #    image: "citusdata/membership-manager:0.3.0"
 #    networks:
 #     - somenetweork
 #    volumes:
 #      - "${DOCKER_SOCK:-/var/run/docker.sock}:/var/run/docker.sock"
 #      - healthcheck-volume:/healthcheck
 #    depends_on: [master]
 #    environment: *AUTH

 homeworkotus:
  image: ${DOCKER_REGISTRY-}homeworkotus
  container_name: otuswebapi
  build:
   context: .
   dockerfile: /HomeWorkOTUS/Dockerfile
  ports:
   - '55555:8080'
  networks:
   - somenetwork
  depends_on:
   - postgres_db
   - rabbitmq

 dialogsapp:
  image: ${DOCKER_REGISTRY-}dialogsapp
  container_name: dialogswebapi
  build:
   context: .
   dockerfile: /DialogsApp/Dockerfile
  ports:
   - '55556:8080'
  networks:
   - somenetwork
  depends_on:
   - postgres_db
   - rabbitmq

 postgres_db:
  image: postgres:latest
  container_name: pgmaster
  environment:
   - POSTGRES_DB=otusdb
   - POSTGRES_USER=postgres
   - POSTGRES_PASSWORD=pass
  ports:
   - '5432:5432'
  networks:
   - somenetwork

 rabbitmq:
    image: rabbitmq:3.10.7-management
    container_name: rabbitmq
    restart: always
    environment:
      - RABBITMQ_DEFAULT_USER=rmuser
      - RABBITMQ_DEFAULT_PASS=pass
    ports:
      - 15672:15672
      - 5672:5672 
    networks:
      - somenetwork

 redis:
    image: redis:latest
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    environment:
      - REDIS_PASSWORD=pass
      - REDIS_PORT=6379
      - REDIS_DATABASES=16
    networks:
      - somenetwork

volumes:
 healthcheck-volume:
 # tarantool:
 #    image: tarantool/tarantool:1.7
 #    container_name: tarantool
 #    restart: always
 #    command: tarantool /usr/local/share/tarantool/app.init.lua
 #    ports:
 #      - 3301:3301
 #      - 55556:8080
 #    volumes:
 #      - d:/tarantool/app:/usr/local/share/tarantool
 #      - d:/tarantool/data:/var/lib/tarantool
 #    networks:
 #      - somenetweork

 # postgres_slave1:
 #  image: postgres:latest
 #  container_name: pgslave1
 #  environment:
 #   - POSTGRES_DB=otusdb
 #   - POSTGRES_USER=postgres
 #   - POSTGRES_PASSWORD=pass
 #  ports:
 #   - '15432:5432'
 #  networks:
 #   - somenetweork

 # postgres_slave2:
 #  image: postgres:latest
 #  container_name: pgslave2
 #  environment:
 #   - POSTGRES_DB=otusdb
 #   - POSTGRES_USER=postgres
 #   - POSTGRES_PASSWORD=pass
 #  ports:
 #   - '25432:5432'
 #  networks:
 #   - somenetweork